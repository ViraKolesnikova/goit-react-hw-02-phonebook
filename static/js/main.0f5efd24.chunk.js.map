{"version":3,"sources":["components/Filter/Filter.module.css","components/ContactItem/ContactItem.module.css","components/ContactList/ContactList.module.css","components/Form/Form.module.css","components/Form/Form.js","components/Filter/Filter.js","components/ContactItem/ContactItem.js","components/ContactList/ContactList.js","App.js","index.js"],"names":["module","exports","Form","nameID","shortid","generate","numberID","initialState","name","number","state","updateState","event","target","value","setState","onSubmitAddContact","preventDefault","newContact","id","undefined","checkContactIdentity","props","addContact","reset","alertIdentity","contacts","find","contact","alert","this","className","s","form","onSubmit","label","htmlFor","input","type","pattern","title","required","onChange","formBtn","Component","Filter","onFilterInputEnter","onFilterOut","filterValue","filterLabel","filterInput","onBlur","ContactItem","phoneNumber","onDeleteBtn","contactListItem","deleteContactBtn","onClick","ContactList","contactsData","contactList","map","App","filter","updateContactsList","obj","prevState","updateFilter","resetFilter","findContactsByFilter","toLowerCase","includes","deleteContact","contactId","filteredContacts","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0f5efd24.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"filterLabel\":\"Filter_filterLabel__1cnTY\",\"filterInput\":\"Filter_filterInput__37kcw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactListItem\":\"ContactItem_contactListItem__2i03z\",\"deleteContactBtn\":\"ContactItem_deleteContactBtn__lF2fr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactList\":\"ContactList_contactList__1VJPL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"Form_form__2GCic\",\"label\":\"Form_label__E_bhQ\",\"input\":\"Form_input__1MKho\",\"formBtn\":\"Form_formBtn__dit4f\"};","import { Component } from 'react';\nimport shortid from 'shortid';\nimport PropTypes from 'prop-types';\n\nimport s from './Form.module.css';\n\nexport default class Form extends Component {\n  nameID = shortid.generate();\n  numberID = shortid.generate();\n\n  static propTypes = {\n    addContact: PropTypes.func.isRequired,\n    contacts: PropTypes.arrayOf(\n      PropTypes.shape({\n        id: PropTypes.string.isRequired,\n        name: PropTypes.string.isRequired,\n        number: PropTypes.string.isRequired,\n      }),\n    ).isRequired,\n  };\n\n  initialState = {\n    name: '',\n    number: '',\n  };\n\n  state = this.initialState;\n\n  updateState = event => {\n    const { name, value } = event.target;\n    this.setState({ [name]: value });\n  };\n\n  onSubmitAddContact = event => {\n    event.preventDefault();\n    const { name, number } = this.state;\n    const contactID = shortid.generate();\n    const newContact = {\n      id: contactID,\n      name,\n      number,\n    };\n    if (this.checkContactIdentity() === undefined) {\n      this.props.addContact(newContact);\n      this.reset();\n    } else {\n      this.alertIdentity(name);\n    }\n  };\n\n  reset = () => {\n    this.setState(this.initialState);\n  };\n\n  checkContactIdentity = () => {\n    const identity = this.props.contacts.find(\n      contact => contact.name === this.state.name,\n    );\n    return identity;\n  };\n\n  alertIdentity = name => {\n    alert(`${name} is already in your contacts!`);\n    this.reset();\n  };\n\n  render() {\n    const { name, number } = this.state;\n\n    return (\n      <form className={s.form} onSubmit={this.onSubmitAddContact}>\n        <label className={s.label} htmlFor={this.nameID}>\n          Name\n        </label>\n        <input\n          id={this.nameID}\n          className={s.input}\n          type=\"text\"\n          name=\"name\"\n          value={name}\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n          onChange={this.updateState}\n        />\n        <label className={s.label} htmlFor={this.numberID}>\n          Number\n        </label>\n        <input\n          id={this.numberID}\n          className={s.input}\n          type=\"tel\"\n          name=\"number\"\n          value={number}\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n          onChange={this.updateState}\n        />\n        <button className={s.formBtn} type=\"submit\">\n          Add contact\n        </button>\n      </form>\n    );\n  }\n}\n","import PropTypes from 'prop-types';\n\nimport s from './Filter.module.css';\n\nexport default function Filter({\n  onFilterInputEnter,\n  onFilterOut,\n  filterValue,\n}) {\n  return (\n    <label className={s.filterLabel}>\n      Find contacts by name\n      <input\n        type=\"text\"\n        value={filterValue}\n        className={s.filterInput}\n        onChange={onFilterInputEnter}\n        onBlur={onFilterOut}\n      />\n    </label>\n  );\n}\n\nFilter.propTypes = {\n  onFilterInputEnter: PropTypes.func.isRequired,\n  onFilterOut: PropTypes.func.isRequired,\n  filterValue: PropTypes.string.isRequired,\n};\n","import PropTypes from 'prop-types';\n\nimport s from './ContactItem.module.css';\n\nexport default function ContactItem({ name, phoneNumber, onDeleteBtn }) {\n  return (\n    <li className={s.contactListItem}>\n      <p>\n        {name}: <span>{phoneNumber}</span>\n      </p>\n      <button\n        className={s.deleteContactBtn}\n        type=\"button\"\n        onClick={onDeleteBtn}\n      >\n        Delete\n      </button>\n    </li>\n  );\n}\n\nContactItem.propTypes = {\n  name: PropTypes.string.isRequired,\n  phoneNumber: PropTypes.string.isRequired,\n  onDeleteBtn: PropTypes.func.isRequired,\n};\n","import PropTypes from 'prop-types';\n\nimport ContactItem from '../ContactItem';\nimport s from './ContactList.module.css';\n\nexport default function ContactList({ contactsData, onDeleteBtn }) {\n  return (\n    <ul className={s.contactList}>\n      {contactsData.map(({ id, name, number }) => (\n        <ContactItem\n          key={id}\n          name={name}\n          phoneNumber={number}\n          onDeleteBtn={() => onDeleteBtn(id)}\n        />\n      ))}\n    </ul>\n  );\n}\n\nContactList.propTypes = {\n  contactsData: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    }),\n  ).isRequired,\n  onDeleteBtn: PropTypes.func.isRequired,\n};\n","import { Component } from 'react';\n\nimport Form from './components/Form';\nimport Filter from './components/Filter';\nimport ContactList from './components/ContactList';\n\nclass App extends Component {\n  state = {\n    contacts: [\n      { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n      { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n      { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n      { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n    ],\n    filter: '',\n  };\n\n  updateContactsList = obj => {\n    this.setState(prevState => ({ contacts: [...prevState.contacts, obj] }));\n  };\n\n  updateFilter = event => {\n    const filterValue = event.target.value;\n    this.setState({ filter: filterValue });\n  };\n\n  resetFilter = event => {\n    this.setState({ filter: '' });\n  };\n\n  findContactsByFilter = () => {\n    const { contacts, filter } = this.state;\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(filter.toLowerCase()),\n    );\n  };\n\n  deleteContact = contactId => {\n    this.setState(prevState => ({\n      contacts: prevState.contacts.filter(contact => contact.id !== contactId),\n    }));\n  };\n\n  render() {\n    const { filter } = this.state;\n    const filteredContacts = this.findContactsByFilter();\n\n    return (\n      <>\n        <h1>Phonebook</h1>\n        <Form\n          addContact={this.updateContactsList}\n          contacts={this.state.contacts}\n        />\n\n        <h2>Contacts</h2>\n        <Filter\n          onFilterInputEnter={this.updateFilter}\n          onFilterOut={this.resetFilter}\n          filterValue={filter}\n        />\n        <ContactList\n          contactsData={filteredContacts}\n          onDeleteBtn={this.deleteContact}\n        />\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}